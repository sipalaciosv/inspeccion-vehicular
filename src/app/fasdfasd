"use client";

import { useEffect, useState } from "react";
import { collection, addDoc, getDocs, query, where } from "firebase/firestore";
import { db } from "@/firebase";

export default function ChecklistForm() {
  const [form, setForm] = useState({
    fecha_inspeccion: "",
    hora_inspeccion: "",
    conductor: "",
    numero_interno: "",
    vehiculo: { marca: "", modelo: "", patente: "", ano: "", color: "", kms_inicial: "", kms_final: "" },
    checklist: {},
    observaciones: "",
  });

  const opciones = ["B", "M", "NA"];
  const [conductores, setConductores] = useState<string[]>([]);
  const [numerosInternos, setNumerosInternos] = useState<string[]>([]);

  useEffect(() => {
    const cargarConductores = async () => {
      const snapshot = await getDocs(collection(db, "conductores"));
      setConductores(snapshot.docs.map(doc => doc.data().nombre));
    };

    const cargarNumerosInternos = async () => {
      const snapshot = await getDocs(collection(db, "vehiculos"));
      setNumerosInternos(snapshot.docs.map(doc => doc.data().numero_interno));
    };

    cargarConductores();
    cargarNumerosInternos();
  }, []);

  const cargarDatosVehiculo = async (numeroInterno: string) => {
    const q = query(collection(db, "vehiculos"), where("numero_interno", "==", numeroInterno));
    const snapshot = await getDocs(q);
    if (!snapshot.empty) {
      const data = snapshot.docs[0].data();
      setForm({
        ...form,
        numero_interno: numeroInterno,
        vehiculo: {
          marca: data.marca || "",
          modelo: data.modelo || "",
          patente: data.patente || "",
          ano: data.ano || "",
          color: data.color || "",
          kms_inicial: "",
          kms_final: ""
        }
      });
    }
  };

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    try {
      await addDoc(collection(db, "formularios"), {
        ...form,
        fecha_creacion: new Date(),
        estado: "pendiente",
        aprobado_por: null,
      });
      alert("Formulario enviado exitosamente");
    } catch (error) {
      console.error("Error:", error);
      alert("Error al enviar formulario");
    }
  };

  const handleCheckboxChange = (item: string, opcion: string) => {
    setForm({
      ...form,
      checklist: { ...form.checklist, [item]: opcion },
    });
  };

  return (
    <main className="container py-4">
      <h2>Checklist Pre Uso Buses üöå</h2>
      <form onSubmit={handleSubmit}>
        <div className="card mb-4">
          <div className="card-header bg-secondary text-white">Informaci√≥n del Veh√≠culo y Conductor</div>
          <div className="card-body row">
            <div className="col-md-3 mb-3">
              <label>Fecha de Inspecci√≥n</label>
              <input required type="date" className="form-control" onChange={(e) => setForm({ ...form, fecha_inspeccion: e.target.value })} />
            </div>
            <div className="col-md-3 mb-3">
              <label>Hora de Inspecci√≥n</label>
              <input required type="time" className="form-control" onChange={(e) => setForm({ ...form, hora_inspeccion: e.target.value })} />
            </div>
            <div className="col-md-3 mb-3">
              <label>Conductor</label>
              <select required className="form-control" onChange={(e) => setForm({ ...form, conductor: e.target.value })}>
                <option value="">Seleccione un conductor</option>
                {conductores.map(nombre => <option key={nombre} value={nombre}>{nombre}</option>)}
              </select>
            </div>
            <div className="col-md-3 mb-3">
              <label>N√∫mero Interno</label>
              <select required className="form-control" onChange={(e) => cargarDatosVehiculo(e.target.value)}>
                <option value="">Seleccione un n√∫mero interno</option>
                {numerosInternos.map(num => <option key={num} value={num}>{num}</option>)}
              </select>
            </div>
          </div>
        </div>
      </form>
    </main>
  );
}